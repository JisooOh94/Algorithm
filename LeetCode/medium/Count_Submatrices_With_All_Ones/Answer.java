package medium.Count_Submatrices_With_All_Ones;

import java.util.Arrays;

import org.junit.Test;

public class Answer {
	@Test
	public void test() {
		int[][][] mat = new int[][][]{
				{
						{1, 0, 1},
						{1, 1, 0},
						{1, 1, 0}
				},
				{
						{0, 1, 1, 0},
						{0, 1, 1, 1},
						{1, 1, 1, 0}
				},
				{
						{1, 0, 1},
						{0, 1, 0},
						{1, 0, 1}
				},
				{
						{0, 1, 1, 1},
						{1, 1, 0, 1},
						{1, 1, 0, 0},
						{1, 1, 1, 1},
						{0, 1, 0, 0}
				},
				{        //96
						{1, 1, 1, 1, 0, 1, 0},
						{1, 1, 1, 0, 0, 0, 1},
						{0, 1, 1, 1, 1, 0, 0},
						{1, 1, 0, 1, 1, 0, 1},
						{1, 0, 0, 0, 0, 0, 1},
						{1, 1, 0, 1, 1, 1, 1},
						{1, 1, 0, 0, 1, 1, 1}
				},
				{        //82
						{1, 0, 0, 1, 0, 1, 0, 1},
						{1, 0, 1, 1, 0, 1, 0, 0},
						{1, 1, 1, 0, 1, 0, 0, 1},
						{0, 0, 1, 1, 1, 1, 0, 0},
						{0, 0, 1, 1, 1, 1, 0, 1},
						{1, 1, 0, 1, 1, 1, 0, 0}
				},
				{    //122
						{1, 1, 0, 1, 1, 1, 1, 0, 1},
						{0, 1, 1, 1, 1, 0, 1, 1, 0},
						{1, 0, 0, 0, 0, 1, 1, 1, 1},
						{0, 0, 1, 0, 1, 1, 1, 1, 1},
						{0, 0, 0, 1, 0, 1, 1, 1, 1},
						{0, 0, 1, 0, 0, 1, 0, 1, 0}
				},
				{
						{1, 1, 0, 1},
						{1, 0, 1, 0},
						{1, 0, 1, 1},
						{1, 1, 1, 0},
						{1, 1, 1, 1},
						{1, 1, 1, 1}
				},
				{
						{0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1},
						{0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0},
						{1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1},
						{0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0},
						{1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1},
						{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1},
						{1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0},
						{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1},
						{1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1},
						{0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1},
						{1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0}
				},
				{
						{0, 1, 1, 1, 1, 0},
						{1, 1, 1, 1, 1, 1},
						{1, 1, 1, 1, 1, 1}
				}
		};

		for(int i = 0; i < mat.length; i++) {
			System.out.println(numSubmat(mat[i]));
		}
	}

	public int numSubmat(int[][] mat) {
		int M = mat.length, N = mat[0].length;

		int res = 0;
		for (int up = 0; up < M; ++up) {
			int[] h = new int[N];
			Arrays.fill(h, 1);
			for (int down = up; down < M; ++down) {
				for (int k = 0; k < N; ++k) h[k] &= mat[down][k];
				res += countOneRow(h);
			}
		}

		return res;
	}

	private int countOneRow(int[] A) {

		int res = 0, length = 0;
		for (int i = 0; i < A.length; ++i) {
			length = (A[i] == 0 ? 0 : length + 1);
			res += length;
		}
		return res;
	}
}
